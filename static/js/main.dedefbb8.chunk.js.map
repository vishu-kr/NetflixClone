{"version":3,"sources":["axios.js","Row.js","requests.js","Banner.js","Nav.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setmovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","fetchData","className","map","movie","onClick","movieTrailer","name","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","handleClick","src","poster_path","backdrop_path","alt","id","videoId","opts","height","width","playerVars","autoplay","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","str","n","setmovie","Math","floor","random","length","style","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","substr","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dedefbb8.chunk.js","sourcesContent":["import axios from \"axios\";\r\n// base url to make requests to the movie database\r\nconst instance=axios.create({\r\n    baseURL: \"https://api.themoviedb.org/3\",\r\n});\r\nexport default instance;","import React,{ useState,useEffect } from 'react'\r\nimport axios from \"./axios\";\r\nimport \"./Row.css\";\r\nimport YouTube from \"react-youtube\";\r\nimport movieTrailer from \"movie-trailer\"\r\n\r\nconst base_url=\"https://image.tmdb.org/t/p/original/\"\r\n\r\nfunction Row({title,fetchUrl,isLargeRow}) {\r\n    const [movies, setmovies] = useState([]);\r\n    const [trailerUrl, setTrailerUrl] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        async function fetchData(){\r\n            const request=await axios.get(fetchUrl);\r\n            setmovies(request.data.results);\r\n            return request;\r\n        }\r\n        fetchData();\r\n    }, [fetchUrl]);\r\n   \r\n    const opts={\r\n        height: \"390\",\r\n        width: \"100%\",\r\n        playerVars:{\r\n            // https://developers.google.com/youtube/player_parameters\r\n            autoplay:1,\r\n        },\r\n    };\r\n\r\n    const handleClick =(movie)=>{\r\n        if(trailerUrl){\r\n            setTrailerUrl(\"\");\r\n        }else{\r\n            movieTrailer(movie?.name || \"\")\r\n            .then((url)=>{\r\n                const urlParams = new URLSearchParams(new URL(url).search);\r\n                setTrailerUrl(urlParams.get(\"v\"));\r\n            })\r\n            .catch((error)=>console.log(error));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <h2>{title}</h2>\r\n\r\n            <div className=\"row__posters\">\r\n                {/* several row_poster */}\r\n \r\n                {movies.map(movie => (\r\n                    <img\r\n                    key={movie.id}\r\n                    onClick={() => handleClick(movie)}\r\n                    className={`row__poster ${isLargeRow && \"row__posterLarge\"}`} \r\n                    src={`${base_url}${isLargeRow ? movie.poster_path : movie.backdrop_path}`} alt={movie.name}/>\r\n                ))}\r\n            </div>\r\n            {trailerUrl && <YouTube videoId={trailerUrl} opts={opts}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Row\r\n","const API_KEY =\"b9e30e61e1ff37fd983d1dc67d14da18\";\r\nconst requests={\r\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n    fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n    fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n    \r\n}\r\nexport default requests;","import React,{useEffect, useState} from 'react'\r\nimport axios from './axios';\r\nimport requests from './requests'\r\nimport './Banner.css'\r\n\r\nfunction Banner() {\r\n    const [movie, setmovie] = useState([]);\r\n    useEffect(()=>{\r\n        async function fetchData(){\r\n            const request=await axios.get(requests.fetchNetflixOriginals);\r\n                setmovie(\r\n                    request.data.results[Math.floor(Math.random()*request.data.results.length - 1)\r\n                    ]\r\n            );\r\n            return request;\r\n        }\r\n        fetchData();\r\n    },[]);\r\n\r\n    console.log(movie);\r\n    function truncate(str,n){\r\n        return str?.length > n ? str.substr(0,n-1)+\"...\":str;\r\n    }\r\n\r\n    return (\r\n        <header className=\"banner\" style={{\r\n            backgroundSize:\"cover\",\r\n            backgroundImage:`url(\r\n                \"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\"\r\n            )`,\r\n            backgroundPosition:\"center center\",\r\n            }}>\r\n            <div className=\"banner__contents\"> \r\n                <h1 className=\"banner__title\">\r\n                    {movie?.title || movie?.name || movie?.original_name}\r\n                </h1>\r\n\r\n                <div className=\"banner__buttons\">\r\n                    <button className=\"banner__button\">Play</button>\r\n                    <button className=\"banner__button\">My List</button>\r\n                </div>\r\n                \r\n                <h1 className=\"banner__description\">{truncate(movie?.overview,150)}</h1>\r\n            </div>\r\n            <div className=\"banner__fadeBottom\"/>\r\n        </header>\r\n    )\r\n}\r\n\r\n\r\nexport default Banner\r\n","import React, { useEffect, useState } from 'react'\r\nimport './Nav.css'\r\n\r\nfunction Nav() {\r\n    const [show, handleShow] = useState(false)\r\n\r\n    useEffect(() =>{\r\n        window.addEventListener(\"scroll\", ()=>{\r\n            if(window.scrollY > 100){\r\n                handleShow(true);\r\n            }else handleShow(false);\r\n        });\r\n        return () => {\r\n            window.removeEventListener(\"scroll\");\r\n        };\r\n    },[])\r\n\r\n    return (\r\n        <div className={`nav ${show && \"nav__black\"}`}>\r\n            <img\r\n                className=\"nav__logo\"\r\n                src=\"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\"\r\n                alt=\"Netflix Logo\"\r\n            />\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","import React from 'react';\nimport './App.css';\nimport Row from './Row'\nimport requests from './requests';\nimport Banner from './Banner';\nimport Nav from './Nav'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Nav/>\n      <Banner/>\n      <Row title=\"NETFLIX ORIGINALS\" fetchUrl={requests.fetchNetflixOriginals} isLargeRow={true}/>\n      <Row title=\"TRENDING NOW\" fetchUrl={requests.fetchTrending}/>\n      <Row title=\"TOP RATED\" fetchUrl={requests.fetchTopRated}/>\n      <Row title=\"ACTION MOVIES\" fetchUrl={requests.fetchActionMovies}/>\n      <Row title=\"COMEDY MOVIES\" fetchUrl={requests.fetchComedyMovies}/>\n      <Row title=\"HORROR MOVIES\" fetchUrl={requests.fetchHorrorMovies}/>\n      <Row title=\"ROMANCE MOVIES\" fetchUrl={requests.fetchRomanceMovies}/>\n      <Row title=\"DOCUMENTRIES\" fetchUrl={requests.fetchDocumentaries}/>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}